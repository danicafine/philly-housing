            -- basic reference tables to be used later --
CREATE TABLE dates (
    date    INTEGER NOT NULL,
	month   INTEGER,
	year    INTEGER,
	PRIMARY KEY (date),
);

CREATE TABLE locations (
    latitude        DOUBLE NOT NULL,
    longitude       DOUBLE NOT NULL,
    street_address  VARCHAR(100),
    zipcode         INTEGER,
    city            VARCHAR(50),
    state           VARCHAR(20),
    PRIMARY KEY (latitude, longitude)
);


                        -- zillow data tables --        
CREATE TABLE zillow_metrics (
    region_id INTEGER NOT NULL,
    home_type VARCHAR(40) NOT NULL,
    PRIMARY KEY (region_id, home_type)
);

CREATE TABLE metrics_collected_on (
    region_id               INTEGER NOT NULL,
    home_type               VARCHAR(40) NOT NULL,
    date                    INTEGER NOT NULL,
    zillow_home_value_index INTEGER,
    median_list_price       INTEGER,
    median_rent_price       INTEGER
    PRIMARY KEY (region_id, home_type, date),
    FOREIGN KEY (date) REFERENCES dates,
    FOREIGN KEY (region_id, home_type) REFERENCES zillow_metrics    
);

CREATE TABLE zillow_metrics_location_xref (
    region_id   INTEGER NOT NULL,
    latitude    DOUBLE NOT NULL,
    longitude   DOUBLE NOT NULL,
    PRIMARY KEY (region_id),
    FOREIGN KEY (region_id) REFERENCES zillow_metrics,
    FOREIGN KEY (latitude, longitude) REFERENCES locations
);


                        -- school data tables --
CREATE TABLE schools (
    school_id   INTEGER NOT NULL,
	name        VARCHAR(50),
	phone       CHAR(10),
	grade_range CHAR(10),
	grade_level CHAR(10)   
	size        INTEGER,
	type        VARCHAR(20),
	subtype     VARCHAR(20),
	PRIMARY KEY(school_id)
);

CREATE TABLE school_location_xref (
    school_id   INTEGER NOT NULL,
    latitude    DOUBLE NOT NULL,
    longitude   DOUBLE NOT NULL,
    PRIMARY KEY (school_id),
    FOREIGN KEY (school_id) REFERENCES schools
    FOREIGN KEY (latitude, longitude) REFERENCES locations
);


                        -- crimes data tables --
CREATE TABLE crimes (
    crime_id    INTEGER NOT NULL,
    date        INTEGER NOT NULL,
	description VARCHAR(100),
	PRIMARY KEY (crime_id)
);

CREATE TABLE crime_location_xref (
    crime_id    INTEGER NOT NULL,
    latitude    DOUBLE NOT NULL,
    longitude   DOUBLE NOT NULL,
    PRIMARY KEY (crime_id),
    FOREIGN KEY (crime_id) REFERENCES crimes
    FOREIGN KEY (latitude, longitude) REFERENCES locations
);


                    -- septa data tables --
CREATE TABLE septa_locations (
    septa_id        INTEGER NOT NULL,
    location_name   VARCHAR(50),
    location_type   VARCHAR(20),
    PRIMARY KEY (septa_id)
);

CREATE TABLE septa_location_xref (
    septa_id    INTEGER NOT NULL,
    latitude    DOUBLE NOT NULL,
    longitude   DOUBLE NOT NULL,
    PRIMARY KEY (septa_id),
    FOREIGN KEY (septa_id) REFERENCES septa_locations
    FOREIGN KEY (latitude, longitude) REFERENCES locations
);


                    -- property data tables -- 
CREATE TABLE properties (
    property_id             INTEGER NOT NULL,
    registry_id             INTEGER,
    building_description    VARCHAR(30),
    category_description    VARCHAR(30),
    central_air             SMALLINT,
    fireplaces              SMALLINT,
    fuel                    VARCHAR(10),
    garage_spaces           SMALLINT,
    bathroom_ct             SMALLINT,
    bedroom_ct              SMALLINT,
    room_ct                 SMALLINT,
    story_ct                SMALLINT,
    sewer                   SMALLINT,
    total_area              INTEGER,
    total_livable_area      INTEGER,
    unit                    INTEGER,
    year_built              INTEGER,
    year_built_estimate     SMALLINT,
    PRIMARY KEY (property_id)
);

CREATE TABLE property_location_xref (
    property_id INTEGER NOT NULL,
    latitude    DOUBLE NOT NULL,
    longitude   DOUBLE NOT NULL,
    PRIMARY KEY (property_id),
    FOREIGN KEY (property_id) REFERENCES properties
    FOREIGN KEY (latitude, longitude) REFERENCES locations
);

CREATE TABLE property_sold (
    property_id     INTEGER NOT NULL,
    date            INTEGER NOT NULL,
    sale_price      INTEGER
    PRIMARY KEY (property_id, date),
    FOREIGN KEY (property_id) REFERENCES properties,
    FOREIGN KEY (date) REFERENCES dates
);  

CREATE TABLE property_assessed (
    property_id     INTEGER NOT NULL,
    date            INTEGER NOT NULL,
    market_value    INTEGER,
    PRIMARY KEY (property_id, date),
    FOREIGN KEY (property_id) REFERENCES properties,
    FOREIGN KEY (date) REFERENCES dates
);
